<!DOCTYPE html><html>
	<head>
		<title>循环语法</title>
		<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
		<link href="default.css" rel="stylesheet" type="text/css"/>
		
		
	</head>
	<body>
		
		<style>
			.cm-lite-el{ color:#d30;}
			.cm-lite-tag{
			color:#9933FF;font-weight:bold;}
		</style>
		<script src="http://www.xidea.org/lite/codemirror/o.js"></script>
		<script src="editor.js"></script>
		<div id="main">
	<div id="header">
		<div class="logo"
onclick="location = 'http://www.xidea.org/lite/'">
			
				<div style="left:0px;top:0px;width:19px;height:100px;"> </div>
			
				<div style="left:0px;top:81px;width:42px;height:19px;"> </div>
			
				<div style="left:23px;top:0px;width:19px;height:19px;"> </div>
			
				<div style="left:23px;top:23px;width:19px;height:54px;"> </div>
			
				<div style="left:46px;top:0px;width:42px;height:19px;"> </div>
			
				<div style="left:46px;top:23px;width:19px;height:77px;"> </div>
			
				<div style="left:69px;top:81px;width:19px;height:19px;"> </div>
			
		</div>
		<h1>
			循环语法
		</h1>
		<div class="top-box">
			<div id="i18n">
				<span class="i18n_zh"
onclick="i18n_reload(&#34;zh&#34;)">中文</span>|
				<span class="i18n_en"
onclick="i18n_reload(&#34;en&#34;)">English</span>
				<div style="display:none">
				|<input type="checkbox" id="i18n_on" checked="checked"/>
				<label for="i18n_on" title="右键点击内容片段在弹出框输入翻译">翻译</label>
				</div>
				<script>/*<![CDATA[*/var cookie = ''+document.cookie;var i18n_lang = cookie.replace(/^.*\bi18n_lang=([\w]+).*$/,'$1');if(i18n_lang == cookie){i18n_lang = 'cn'}function i18n_reload(i18n_lang){document.cookie = 'i18n_lang='+i18n_lang;location.reload();}document.getElementById('i18n').className ='i18n_'+ i18n_lang;var i18n_on = document.getElementById('i18n_on')document.body.oncontextmenu=function(event){if(i18n_on.checked ||true){var event = event || window.event;var src = event.target || event.srcElement;var id = src.getAttribute('data-i18n-key');if(id){var oldvalue = src.innerHTML;var value = prompt('更正翻译('+i18n_lang+')：',oldvalue);if(value && value != oldvalue){var data = 'i18n_action=save&i18n_id='+encodeURIComponent(id)+'&i18n_value='+encodeURIComponent(value);postData(location.href,data,function(){src.innerHTML = value;});}return false;}	}}//]]></script>
			</div>
			<div class="test"><a href="../test.xhtml">查看测试报表</a></div>
		</div>
		<div class="line"></div>
	</div>
	<div id="content">
		
		<h3>功能支持</h3>
		<p>
			Lite模板循环控制分四种情况：
			<ul>
				<li>对数组的循环。</li>
				<li>对键值集合的键集循环（类js 的for in 语法）。</li>
				<li>指定循环次数的循环。</li>
				<li>指定循环区间的循环。</li>
			</ul>
			此外，Lite循环还有一个特色，
			<strong>循环的空处理</strong>
			（c:else 语法,见<a href="#forElse">示例2</a>）：
		</p>
		<p>
			如果您希望得到循环状态信息，有一个for关键字可以帮你。
		</p>
		<h3>示例1（四种循环类型）</h3>
		<ul>
		
		<div class='code'><script>renderSource("\u003clabel>时间：\u003c/label>\u000a\u003c!-- 最常见的是对数组循环 -->\u000a\u003cselect name=\u0022year\u0022>\u000a	\u003cc:for var=\u0022year\u0022 list=\u0022${[1981,1982,1983]}\u0022>\u000a		\u003coption>${year}\u003c/option>\u000a	\u003c/c:for>\u000a\u003c/select>年\u000a\u003c!-- 您还可以指定区间循环(偷个懒，还是属性模式简单,效果与标签模式一样)-->\u000a\u003cselect name=\u0022month\u0022>\u000a	\u003coption c:for=\u0022${month:[1..12]}\u0022>${month}\u003c/option>\u000a\u003c/select>月\u000a\u003c!-- 您也可以对数字循环，数字循环的时候，var变量从1开始 -->\u000a\u003cselect name=\u0022date\u0022>\u000a	\u003coption c:for=\u0022${date:31}\u0022>${date}\u003c/option>\u000a\u003c/select>日\u000a\u003c!-- 先申明一个循环对象 -->\u000a\u003cc:var name=\u0022apMap\u0022 value=\u0022${ {\u0027AM\u0027:\u0027上午\u0027,\u0027PM\u0027:\u0027下午\u0027} }\u0022/>\u000a\u003c!-- 您还可以对对象key循环 -->\u000a\u003cselect name=\u0022ap\u0022>\u000a	\u003cc:for var=\u0022ap\u0022 list=\u0022${apMap}\u0022>\u000a		\u003coption value=\u0027${ap}\u0027>${apMap[ap]}\u003c/option>\u000a	\u003c/c:for>\u000a\u003c/select>","{}",'');</script></div>
		</ul>
		<a name="forElse"></a>
		<h3>示例2（循环空处理和for状态字）</h3>
		<ul>
			<script>resultJsonModel="{\u000a	\u0022result\u0022:[\u000a		{\u0022name\u0022:\u0022张三\u0022,\u0022age\u0022:21},\u000a		{\u0022name\u0022:\u0022李四\u0022,\u0022age\u0022:22},\u000a		{\u0022name\u0022:\u0022王二\u0022,\u0022age\u0022:23}\u000a	]\u000a}";</script>
		<div class='code'><script>renderSource("\u003cc:for var=\u0022item\u0022 list=\u0022${result}\u0022 status=\u0022outerFor\u0022>\u000a	\u003c!-- 这里 ${for.dataFor} 等价于 ${outerFor.index} -->\u000a	\u003cdiv>第${for.index}条数据属性值为：\u003c/div>\u000a	\u003cdiv>\u000a		\u003cp c:for=\u0022${key:item}\u0022>\u000a			第${outerFor.index}条数据的第${for.index}个属性，属性名：${key}；属性值：${item[key]}\u000a		\u003c/p>\u000a	\u003c/div>\u000a\u003c/c:for>\u000a\u003cc:else>\u000a	\u003cp>没有数据\u003c/p>\u000a\u003c/c:else>",resultJsonModel,'');</script></div>
		<p>
			for 做为一个关键字，只包含两个属性 index 和lastIndex；在循环内不需要申明可以直接使用。
			在循环嵌套的时候，for 关键字指向的是自己直接所在的循环的状态。
		</p><p>
			如果想在自循环中使用外部循环的状态，可以申明 status 别名，这样外部for循环状态将就在意在任意位置通过这个别名获取。
		</p>
		</ul>
		<h3>示例3（反向循环，跳跃循环）</h3>
		<ul>
			<div class='code'><script>renderSource("\u003c!-- 通过数据的reverse 函数实现数组逆转\u000a	（reverse为有副作用的函数，为了消除副作用，需要concat复制后调用） -->\u000a\u003cc:for var=\u0022item\u0022 list=\u0022${list.concat().reverse()}\u0022>\u000a	\u003cp>${item}\u003c/p>\u000a\u003c/c:for>\u000a\u000a\u003c!-- 对数组的偶数位循环 -->\u000a\u003cc:for var=\u0022item\u0022 list=\u0022${list}\u0022>\u000a	\u003cp c:if=\u0022${(for.index+1)%2}\u0022>\u000a		${item}\u000a	\u003c/p>\u000a\u003c/c:for>","{list:[1,2,3,4]}",'');</script></div>
		</ul>
	
		<div id="post">

	<div class="ds-thread"></div>
<script type="text/javascript">var duoshuoQuery = {short_name:"lite"};(function() {var ds = document.createElement('script');ds.type = 'text/javascript';ds.async = true;ds.src = 'http://static.duoshuo.com/embed.js';ds.charset = 'UTF-8';(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ds);})();</script>

</div>
	</div>
	<div id="footer"></div>
</div>
		<div id="menu">
	<div class="menuInner">
		<h3 c:i18n="0">入门</h3>
		<ul>
			<li>
				<a c:i18n="0_1" href="index.xhtml">Lite模板简介</a>
			</li>
			<li>
				<a c:i18n="0_2" href="install.xhtml">测试与安装</a>
			</li>
		</ul>

		<h3 c:i18n="1">表达式参考</h3>
		<ul>
			<li>
				<a c:i18n="1_1" href="el.xhtml">什么是表达式</a>
			</li>
			<li>
				<a c:i18n="1_2" href="el-value.xhtml">变量/原子值/复合值</a>
			</li>
			<li>
				<a c:i18n="1_3" href="el-op.xhtml">操作符与函数</a>
			</li>
			<li>
				<a c:i18n="1_4" href="el-function.xhtml">内置函数参考</a>
			</li>
		</ul>

		<h3 c:i18n="2">核心模板语法参考</h3>
		<ul>
			
			<li>
				<a c:i18n="2_1" href="syntax-out.xhtml">输出语法[${},$!{},$#{},日期]</a>
			</li>
			<li>
				<a c:i18n="2_2" href="syntax-if.xhtml">条件判断[c:if]</a>
			</li>
			<li>
				<a c:i18n="2_3" href="syntax-choose.xhtml">分支选择[c:choose]</a>
			</li>
			<li>
				<a c:i18n="2_4" href="syntax-for.xhtml" class=" current">四种循环[c:for]</a>
			</li>
			<li>
				<a c:i18n="2_5" href="syntax-extends.xhtml">模板继承[c:extends]</a>
			</li>
			<li>
				<a c:i18n="2_6" href="syntax-include.xhtml">静态包含[c:include]</a>
			</li>
			<li>
				<a c:i18n="2_7" href="syntax-var.xhtml">变量申明[c:var]</a>
			</li>
			<li>
				<a c:i18n="2_8" href="syntax-def.xhtml">模板函数申明[c:def]</a>
			</li>
			<li>
				<a c:i18n="2_9" href="syntax-extension.xhtml">自定义扩展[c:extension]</a>
			</li>
		</ul>

		<h3 c:i18n="3">XML/HTML相关语法参考</h3>
		<ul>
			<li>
				<a c:i18n="3_1" href="syntax-trim.xhtml">注释/语法空格控制[h:trim]</a>
			</li>
			<li>
				<a c:i18n="3_2" href="syntax-client.xhtml">前端模板函数申明[h:client]</a>
			</li>
			<li>
				<a c:i18n="3_3" href="syntax-autoform.xhtml">自动表单[h:autofrom]</a>
			</li>
			<li>
				<a c:i18n="3_4" href="feature-autoencode.xhtml">自动编码</a>
			</li>
			<li>
				<a c:i18n="3_5" href="feature-xml.xhtml" title="标记语言特有的语法，如：条件属性,自动编码,自动语义补全等...">其他特性</a>
			</li>
		</ul>
		<h3 c:i18n="4">开发调试辅助</h3>
		<ul>
			<li>
				<a c:i18n="4_1" href="debug-model.xhtml">查看数据模型</a>
			</li>
			<li>
				<a c:i18n="4_2" href="debug-log.xhtml">查看编译日志</a>
			</li>
		</ul>
		<h3 c:i18n="5">编译打包</h3>
		<ul>
			<li>
				<a c:i18n="5_1" href="compiler-cmd.xhtml">批量编译</a>
			</li>
			<li>
				<a c:i18n="5_2" href="compiler-spec.xhtml">编译规范</a>
			</li>
			<li>
				<a c:i18n="5_3" href="compiler-api.xhtml">自定义编译</a>
			</li>
		</ul>
		<h3 c:i18n="6">常见问题</h3>
		<ul>
			<li>
				<a c:i18n="6_1" href="faq-newer.xhtml">致初学者</a>
			</li>
			<li>
				<a c:i18n="6_2" href="faq-badcase.xhtml">常犯错误</a>
			</li>
			<li>
				<a c:i18n="6_3" href="faq-plan.xhtml">开发计划</a>
			</li>
		</ul>
		<h3 c:i18n="7">二次开发参考</h3>
		<ul>
			<li>
				<a c:i18n="7_1" href="dev-function.xhtml">扩展运行时函数(PHP)</a>
			</li>
			<li>
				<a c:i18n="7_2" href="dev-function.xhtml">扩展运行时函数(Java)</a>
			</li>
			<li>
				<a c:i18n="7_3" href="dev-extension.xhtml">扩展模板语法</a>
			</li>
			<li>
				<a c:i18n="7_4" href="dev-data-view.xhtml">扩展数据模型调试窗口</a>
			</li>
			<li>
				<a c:i18n="7_5" href="dev-translator.xhtml">创建新的运行环境</a>
			</li>
		</ul>
	</div>
</div>
		<div class="dialog">
	<div class="mask"></div>
	<div id="exampleRunner">
		<div class="head">
			===模板测试 ===
			<a class="close"
onclick="closeExample()">X</a>
		</div>
		<div class="jsonSource">
			<h5>数据模型</h5>
			<script>var jsonEditor = CodeMirror(placeMirror, {value: '',lineNumbers: true,mode: {name:"javascript",json:true}});</script>
		</div>
		<div class="templateSource">
			<h5>模板代码</h5>
			<script>var templateEditor = CodeMirror(placeMirror, {value: '',lineNumbers: true,mode: {name:"litexml"}});</script>
		</div>
		<div class="resultSource" id="exampleResult">
			<h5>结果输出</h5>
			<div id="resultLoader"></div>
			<div id="resultSource"></div>
		</div>
		<div class="toolbar">
			<input type="button" value="编译(JS)"
onclick="compileToJS()"/>
			<input type="button" value="编译(PHP)"
onclick="compileToPHP()"/>
			<input type="button" value="编译(NodeJS)"
onclick="compileToNodeJS()"/>
			<input type="button" title="lite" value="编译(Java)"
onclick="compileToLite()"/>
			<input type="button" id="runButton" disabled="disabled" value="运行(?)"
onclick="runTemplate()"/>
		</div>
	</div>
</div>
		
		<script>/*<![CDATA[*/var menu = document.getElementById('menu');var menuContent = menu.firstChild;menuContent = menuContent.nodeType==1 ?menuContent:menuContent.nextSibling;var as = document.body.getElementsByTagName('a');var height = menu.scrollHeight;for(var i = as.length;i--;){var a = as.item(i);if(/\bcurrent\b/.test(a.className)){var t= a.offsetTop;var bt = height - t;if(bt<120){menuContent.scrollTop = -bt+Math.min(150,height/3)+15}} }//]]></script>
	</body>
</html>