<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<title>表达式操作和函数</title>
		<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
		<link href="default.css" rel="stylesheet" type="text/css"/>
		
		
	</head>
	<body>
		
		<style>
			.cm-lite-el{ color:#d30;}
			.cm-lite-tag{
			color:#9933FF;font-weight:bold;}
		</style>
		<script src="http://www.xidea.org/lite/codemirror/o.js"></script>
		<script src="editor.js"></script>
		<div id="main">
	<div id="header">
		<div class="logo"
onclick="location = 'http://www.xidea.org/lite/'">
			
				<div style="left:0px;top:0px;width:19px;height:100px;"> </div>
			
				<div style="left:0px;top:81px;width:42px;height:19px;"> </div>
			
				<div style="left:23px;top:0px;width:19px;height:19px;"> </div>
			
				<div style="left:23px;top:23px;width:19px;height:54px;"> </div>
			
				<div style="left:46px;top:0px;width:42px;height:19px;"> </div>
			
				<div style="left:46px;top:23px;width:19px;height:77px;"> </div>
			
				<div style="left:69px;top:81px;width:19px;height:19px;"> </div>
			
		</div>
		<h1>
			表达式操作和函数
		</h1>
		<div class="top-box">
			<div id="i18n">
				<span class="i18n_zh"
onclick="i18n_reload(&#34;zh&#34;)">中文</span>|
				<span class="i18n_en"
onclick="i18n_reload(&#34;en&#34;)">English</span>
				<div style="display:none">
				|<input type="checkbox" id="i18n_on" checked="checked"/>
				<label for="i18n_on" title="右键点击内容片段在弹出框输入翻译">翻译</label>
				</div>
				<script>/*<![CDATA[*/var cookie = ''+document.cookie;var i18n_lang = cookie.replace(/^.*\bi18n_lang=([\w]+).*$/,'$1');if(i18n_lang == cookie){i18n_lang = 'cn'}function i18n_reload(i18n_lang){document.cookie = 'i18n_lang='+i18n_lang;location.reload();}document.getElementById('i18n').className ='i18n_'+ i18n_lang;var i18n_on = document.getElementById('i18n_on')document.body.oncontextmenu=function(event){if(i18n_on.checked ||true){var event = event || window.event;var src = event.target || event.srcElement;var id = src.getAttribute('data-i18n-key');if(id){var oldvalue = src.innerHTML;var value = prompt('更正翻译('+i18n_lang+')：',oldvalue);if(value && value != oldvalue){var data = 'i18n_action=save&i18n_id='+encodeURIComponent(id)+'&i18n_value='+encodeURIComponent(value);postData(location.href,data,function(){src.innerHTML = value;});}return false;}	}}//]]></script>
			</div>
			<div class="test"><a href="../test.xhtml">查看测试报表</a></div>
		</div>
		<div class="line"></div>
	</div>
	<div id="content">
		
		<h3>操作符</h3>
		<a name="op"></a>
		<p>Lite 模板操作符语义与JavaScript保持一致。支持主要的JavaScript运算符，包括:</p>
		<ul>
			<li>取属性: . []
				<p><i>[] 一般用来取数组元素，如：${array[0]}; </i></p>
				<p><i>. 一般用来取对象属性，如：${str.length}，这种情况也可以用下标语法${str['length']}；两个运算符语义相同。</i></p>
			</li>
			<li>加(数值加和字符串连接)减乘除、取模：+ - * / %
				<p><i>与JavaScript语义完全一致，+运算同时可以做数值加减和字符串连接，当操作数中有字符串时，采用字符连接语义。</i></p>
			</li>
			<li>比较运算：&lt; &lt;= > >= == != === !== 
				<p><i>与JavaScript语义完全一致！</i></p>
			</li>
			<li>正/负/非/ + -  !
				<p><i>与JavaScript语义完全一致！</i></p>
			</li>
			<li> 逻辑与 或 ：&amp;&amp;,|| ； 条件运算：test?a:b
				<p><i>与JavaScript语义完全一致，&amp;&amp;||运算同时具有条件运算功能。
				例如：
				<div class='code'><script>renderSource("\u003ctextarea>\u000a\u003c!-- 输出 str -->\u000a${false||\u0027str\u0027}\u000a\u003c!-- 输出  true-->\u000a${true||\u0027str\u0027}\u000a\u003c!-- 如下两个语法是等价的 -->\u000a${a ? a : b} 等价于： ${a || b}\u000a${user.name ? user.name : \u0027匆匆过客\u0027} 等价于 ${user.name || \u0027匆匆过客\u0027} \u000a\u003c/textarea>","{a:0,b:\u0027b\u0027,user:{name:null}}",'');</script></div> 
				</i>
				
				</p>
				<p>
				这三个表达式中，有一个要点：Boolean规则，这点上，Lite语法设计与JavaScript完全一致。</p>
				<p><strong>只有 false,null,0,'' 四个值是false</strong>，其他都是真（包括空数组，空对象都是真值）。
				</p>
			</li> 
		</ul>
		<hr/>
		<p title="一些不常用的JavaScript操作符">看在JavaScript的面子上，也支持位运算^_^</p>
		<ul>
			<li style="color:#CCC;" title="不常用">其他：&amp; 按位与 ,^ 按位异或 ,| 按位或, ~ 按位取反, 移位>>,>>>,&lt;&lt; </li>
		</ul>
		<p>但是还有如下两类操作符不予支持</p>
		<ul style="color:#CCC;text-decoration:line-through">
			<li>不支持对模板值有影响的操作符号，如赋值(=)，自增，自减(++,--,*=3,%=2...)等;</li>
			<li>以及所有以字符为运算标识的操作符(delete,new,in,typeof,instanceof,...)</li>
		</ul>
		<h3>函数调用</h3>
		<p>Lite 模板支持成员方法和普通函数两种函数调用方式。</p>
		<p>其中成员方法包括标准JavaScript对象的成员方法，这些函数一般是模板系统内置。
		<div class='code'><script>renderSource("${\u0022abc\u0022.substring(1,2)}\u000a${[1,2,3,4].join(\u0027|\u0027)}\u000a${(1000).toString(16)}","{}",'');</script></div>
		</p>
		<p>普通函数包括部分内置的JavaScript标准全局函数，同时模板中自定义的函数，也属于这一类型，调用方法完全一致（查看<a href="syntax-def.xhtml">函数定义语法参考</a>）。
		<div class='code'><script>renderSource("${encodeURIComponent(\u0022汉字\u0022)}\u000a${parseInt(\u0022100个\u0022)}","{}",'');</script></div>
		</p>
		<p>系统内置了JavaScript的大部分标准函数，详细情况请查看:<a href="el-function.xhtml">el-function.xhtml</a>
		</p>
	
		<div id="post">

	<div class="ds-thread"></div>
<script type="text/javascript">var duoshuoQuery = {short_name:"lite"};(function() {var ds = document.createElement('script');ds.type = 'text/javascript';ds.async = true;ds.src = 'http://static.duoshuo.com/embed.js';ds.charset = 'UTF-8';(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ds);})();</script>

</div>
	</div>
	<div id="footer"></div>
</div>
		<div id="menu">
	<div class="menuInner">
		<h3>入门</h3>
		<ul>
			<li>
				<a href="index.xhtml">Lite模板简介</a>
			</li>
			<li>
				<a href="install.xhtml">测试与安装</a>
			</li>
		</ul>

		<h3>表达式参考</h3>
		<ul>
			<li>
				<a href="el.xhtml">什么是表达式</a>
			</li>
			<li>
				<a href="el-value.xhtml">变量/原子值/复合值</a>
			</li>
			<li>
				<a href="el-op.xhtml">操作符与函数</a>
			</li>
			<li>
				<a href="el-function.xhtml">内置函数参考</a>
			</li>
		</ul>

		<h3>核心模板语法参考</h3>
		<ul>
			
			<li>
				<a href="syntax-out.xhtml">输出语法[${},$!{},$#{},日期]</a>
			</li>
			<li>
				<a href="syntax-if.xhtml">条件判断[c:if]</a>
			</li>
			<li>
				<a href="syntax-choose.xhtml">分支选择[c:choose]</a>
			</li>
			<li>
				<a href="syntax-for.xhtml">四种循环[c:for]</a>
			</li>
			<li>
				<a href="syntax-extends.xhtml">模板继承[c:extends]</a>
			</li>
			<li>
				<a href="syntax-include.xhtml">静态包含[c:include]</a>
			</li>
			<li>
				<a href="syntax-var.xhtml">变量申明[c:var]</a>
			</li>
			<li>
				<a href="syntax-def.xhtml">模板函数申明[c:def]</a>
			</li>
			<li>
				<a href="syntax-extension.xhtml">自定义扩展[c:extension]</a>
			</li>
		</ul>

		<h3>XML/HTML相关语法参考</h3>
		<ul>
			<li>
				<a href="syntax-trim.xhtml">注释/语法空格控制[h:trim]</a>
			</li>
			<li>
				<a href="syntax-client.xhtml">前端模板函数申明[h:client]</a>
			</li>
			<li>
				<a href="syntax-autoform.xhtml">自动表单[h:autofrom]</a>
			</li>
			<li>
				<a href="feature-autoencode.xhtml">自动编码</a>
			</li>
			<li>
				<a href="feature-xml.xhtml" title="标记语言特有的语法，如：条件属性,自动编码,自动语义补全等...">其他特性</a>
			</li>
		</ul>
		<h3>开发调试辅助</h3>
		<ul>
			<li>
				<a href="debug-model.xhtml">查看数据模型</a>
			</li>
			<li>
				<a href="debug-log.xhtml">查看编译日志</a>
			</li>
		</ul>
		<h3>编译打包</h3>
		<ul>
			<li>
				<a href="compiler-cmd.xhtml">批量编译</a>
			</li>
			<li>
				<a href="compiler-spec.xhtml">编译规范</a>
			</li>
			<li>
				<a href="compiler-api.xhtml">自定义编译</a>
			</li>
		</ul>
		<h3>常见问题</h3>
		<ul>
			<li>
				<a href="faq-newer.xhtml">致初学者</a>
			</li>
			<li>
				<a href="faq-badcase.xhtml">常犯错误</a>
			</li>
			<li>
				<a href="faq-plan.xhtml">开发计划</a>
			</li>
		</ul>
		<h3>二次开发参考</h3>
		<ul>
			<li>
				<a href="dev-function.xhtml">扩展运行时函数(PHP)</a>
			</li>
			<li>
				<a href="dev-function.xhtml">扩展运行时函数(Java)</a>
			</li>
			<li>
				<a href="dev-extension.xhtml">扩展模板语法</a>
			</li>
			<li>
				<a href="dev-data-view.xhtml">扩展数据模型调试窗口</a>
			</li>
			<li>
				<a href="dev-translator.xhtml">创建新的运行环境</a>
			</li>
		</ul>
	</div>
</div>
		<div class="dialog">
	<div class="mask"></div>
	<div id="exampleRunner">
		<div class="head">
			===模板测试 ===
			<a class="close"
onclick="closeExample()">X</a>
		</div>
		<div class="jsonSource">
			<h5>数据模型</h5>
			<script>var jsonEditor = CodeMirror(placeMirror, {value: '',lineNumbers: true,mode: {name:"javascript",json:true}});</script>
		</div>
		<div class="templateSource">
			<h5>模板代码</h5>
			<script>var templateEditor = CodeMirror(placeMirror, {value: '',lineNumbers: true,mode: {name:"litexml"}});</script>
		</div>
		<div class="resultSource" id="exampleResult">
			<h5>结果输出</h5>
			<div id="resultLoader"></div>
			<div id="resultSource"></div>
		</div>
		<div class="toolbar">
			<input type="button" value="编译(JS)"
onclick="compileToJS()"/>
			<input type="button" value="编译(PHP)"
onclick="compileToPHP()"/>
			<input type="button" value="编译(NodeJS)"
onclick="compileToNodeJS()"/>
			<input type="button" title="lite" value="编译(Java)"
onclick="compileToLite()"/>
			<input type="button" id="runButton" disabled="disabled" value="运行(?)"
onclick="runTemplate()"/>
		</div>
	</div>
</div>
		
		<script>/*<![CDATA[*/var menu = document.getElementById('menu');var menuContent = menu.firstChild;menuContent = menuContent.nodeType==1 ?menuContent:menuContent.nextSibling;var as = document.body.getElementsByTagName('a');var height = menu.scrollHeight;for(var i = as.length;i--;){var a = as.item(i);if(/\bcurrent\b/.test(a.className)){var t= a.offsetTop;var bt = height - t;if(bt<120){menuContent.scrollTop = -bt+Math.min(150,height/3)+15}} }//]]></script>
	</body>
</html>