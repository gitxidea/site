[
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/136",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/136/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/136/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/136/events",
    "html_url": "https://github.com/jindw/xmldom/pull/136",
    "id": 105539056,
    "number": 136,
    "title": "Add (AMD - RequireJS) style code, And fix muliple sylte tag's line and column Number",
    "user": {
      "login": "gseok",
      "id": 2108898,
      "avatar_url": "https://avatars.githubusercontent.com/u/2108898?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gseok",
      "html_url": "https://github.com/gseok",
      "followers_url": "https://api.github.com/users/gseok/followers",
      "following_url": "https://api.github.com/users/gseok/following{/other_user}",
      "gists_url": "https://api.github.com/users/gseok/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gseok/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gseok/subscriptions",
      "organizations_url": "https://api.github.com/users/gseok/orgs",
      "repos_url": "https://api.github.com/users/gseok/repos",
      "events_url": "https://api.github.com/users/gseok/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gseok/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-09-09T07:57:41Z",
    "updated_at": "2015-09-09T07:57:41Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/jindw/xmldom/pulls/136",
      "html_url": "https://github.com/jindw/xmldom/pull/136",
      "diff_url": "https://github.com/jindw/xmldom/pull/136.diff",
      "patch_url": "https://github.com/jindw/xmldom/pull/136.patch"
    },
    "body": "1. if user using AMD module then user can using follow example\r\n\r\n```\r\n            require(['<userDirectory>/xmldom'], function (XMLDOM) {\r\n                    var errorHandler = {\r\n                        fatalError: function (e) {\r\n                            console.error(e);\r\n                            throw e;\r\n                        }\r\n                    };\r\n\r\n                    var doc = new XMLDOM.DOMParser({\r\n                        locator: {},\r\n                        errorHandler: errorHandler\r\n                    }).parseFromString('<userXmlString></userXmlString>', 'text/xml');\r\n            });\r\n```\r\n\r\n2. multiple line style tag's in user xml, this time line num and column numb bug does exsit so fix that bug.\r\n"
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/135",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/135/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/135/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/135/events",
    "html_url": "https://github.com/jindw/xmldom/issues/135",
    "id": 104171087,
    "number": 135,
    "title": "How can I include XML declaration with serializeToString()?",
    "user": {
      "login": "johnballantyne",
      "id": 100769,
      "avatar_url": "https://avatars.githubusercontent.com/u/100769?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johnballantyne",
      "html_url": "https://github.com/johnballantyne",
      "followers_url": "https://api.github.com/users/johnballantyne/followers",
      "following_url": "https://api.github.com/users/johnballantyne/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnballantyne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johnballantyne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnballantyne/subscriptions",
      "organizations_url": "https://api.github.com/users/johnballantyne/orgs",
      "repos_url": "https://api.github.com/users/johnballantyne/repos",
      "events_url": "https://api.github.com/users/johnballantyne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johnballantyne/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-09-01T02:24:38Z",
    "updated_at": "2015-09-01T13:23:27Z",
    "closed_at": null,
    "body": "Here's a simplified example of the code I'm using to build an XML Document:\r\n\r\n    var xmldom = require('xmldom');\r\n    var XMLDoc,\r\n        example;\r\n\r\n    XMLDoc = new xmldom.DOMImplementation().createDocument(null, null, null);\r\n    XMLDoc.appendChild(XMLDoc.createProcessingInstruction('xml-stylesheet', 'type=\"text/xsl'));\r\n\r\n    example = XMLDoc.createElement('foo');\r\n    example.appendChild(XMLDoc.createTextNode('bar'));\r\n    XMLDoc.appendChild(example);\r\n\r\n    console.log(new xmldom.XMLSerializer().serializeToString(XMLDoc));\r\n\r\nHere's the output:\r\n\r\n    <?xml-stylesheet type=\"text/xsl?><foo>bar</foo>\r\n\r\nThis is what I would like the output to look like:\r\n\r\n    <?xml version=\"1.0\" ?><?xml-stylesheet type=\"text/xsl?><foo>bar</foo>\r\n\r\nWhat is required to include the XML declaration when using `serializeToString()`? I could use `createProcessingInstruction()`, but I'm not confident that would be [the right way](https://en.wikipedia.org/wiki/Processing_Instruction#Syntax).\r\n\r\n> \"The XML Declaration at the beginning of an XML document is not a processing instruction, however its similar syntax has often resulted in it being referred to as a processing instruction.\"\r\n\r\nThe .NET XML library has a [`CreateXmlDeclaration()` Method](https://msdn.microsoft.com/en-us/library/system.xml.xmldocument.createxmldeclaration(v=vs.110).aspx?cs-save-lang=1&cs-lang=csharp#code-snippet-2), but I'm not seeing anything that functionality available in xmldom. Am I overlooking something or should I just use `createProcessingInstruction()`?"
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/133",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/133/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/133/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/133/events",
    "html_url": "https://github.com/jindw/xmldom/issues/133",
    "id": 100770636,
    "number": 133,
    "title": "nodeValue in toString",
    "user": {
      "login": "elfet",
      "id": 141232,
      "avatar_url": "https://avatars.githubusercontent.com/u/141232?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elfet",
      "html_url": "https://github.com/elfet",
      "followers_url": "https://api.github.com/users/elfet/followers",
      "following_url": "https://api.github.com/users/elfet/following{/other_user}",
      "gists_url": "https://api.github.com/users/elfet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elfet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elfet/subscriptions",
      "organizations_url": "https://api.github.com/users/elfet/orgs",
      "repos_url": "https://api.github.com/users/elfet/repos",
      "events_url": "https://api.github.com/users/elfet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elfet/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-08-13T13:35:04Z",
    "updated_at": "2015-08-13T13:35:04Z",
    "closed_at": null,
    "body": "Trying to set nodeValue:\r\n```js\r\nvar node = dom.childNodes[0];\r\nnode.nodeValue = 'test';\r\nconsole.log(node.toString()); // empty =(\r\nnode.data = 'test';\r\nconsole.log(node.toString()); // \"test\"\r\n```\r\nI think it is a bug. Can you fix this?"
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/132",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/132/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/132/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/132/events",
    "html_url": "https://github.com/jindw/xmldom/pull/132",
    "id": 99597388,
    "number": 132,
    "title": "add \">\" as escape charater for text encoding",
    "user": {
      "login": "swcho",
      "id": 437917,
      "avatar_url": "https://avatars.githubusercontent.com/u/437917?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swcho",
      "html_url": "https://github.com/swcho",
      "followers_url": "https://api.github.com/users/swcho/followers",
      "following_url": "https://api.github.com/users/swcho/following{/other_user}",
      "gists_url": "https://api.github.com/users/swcho/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swcho/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swcho/subscriptions",
      "organizations_url": "https://api.github.com/users/swcho/orgs",
      "repos_url": "https://api.github.com/users/swcho/repos",
      "events_url": "https://api.github.com/users/swcho/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swcho/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-08-07T07:42:02Z",
    "updated_at": "2015-08-07T07:42:02Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/jindw/xmldom/pulls/132",
      "html_url": "https://github.com/jindw/xmldom/pull/132",
      "diff_url": "https://github.com/jindw/xmldom/pull/132.diff",
      "patch_url": "https://github.com/jindw/xmldom/pull/132.patch"
    },
    "body": "Hi, seems like need bug fix,\r\nThanks~"
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/131",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/131/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/131/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/131/events",
    "html_url": "https://github.com/jindw/xmldom/pull/131",
    "id": 96152399,
    "number": 131,
    "title": "Expose the entityMap variable to allow configuration.",
    "user": {
      "login": "nathanhinish",
      "id": 215868,
      "avatar_url": "https://avatars.githubusercontent.com/u/215868?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanhinish",
      "html_url": "https://github.com/nathanhinish",
      "followers_url": "https://api.github.com/users/nathanhinish/followers",
      "following_url": "https://api.github.com/users/nathanhinish/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanhinish/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanhinish/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanhinish/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanhinish/orgs",
      "repos_url": "https://api.github.com/users/nathanhinish/repos",
      "events_url": "https://api.github.com/users/nathanhinish/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanhinish/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-07-20T20:28:19Z",
    "updated_at": "2015-07-20T20:28:19Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/jindw/xmldom/pulls/131",
      "html_url": "https://github.com/jindw/xmldom/pull/131",
      "diff_url": "https://github.com/jindw/xmldom/pull/131.diff",
      "patch_url": "https://github.com/jindw/xmldom/pull/131.patch"
    },
    "body": "Sometimes it may be desirable to convert a different set of entities or none at all. This would allow the entity set to be configurable."
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/130",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/130/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/130/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/130/events",
    "html_url": "https://github.com/jindw/xmldom/issues/130",
    "id": 95389431,
    "number": 130,
    "title": "getAttribute return an empty string",
    "user": {
      "login": "apirila",
      "id": 4161383,
      "avatar_url": "https://avatars.githubusercontent.com/u/4161383?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apirila",
      "html_url": "https://github.com/apirila",
      "followers_url": "https://api.github.com/users/apirila/followers",
      "following_url": "https://api.github.com/users/apirila/following{/other_user}",
      "gists_url": "https://api.github.com/users/apirila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apirila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apirila/subscriptions",
      "organizations_url": "https://api.github.com/users/apirila/orgs",
      "repos_url": "https://api.github.com/users/apirila/repos",
      "events_url": "https://api.github.com/users/apirila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apirila/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-07-16T09:17:09Z",
    "updated_at": "2015-07-16T09:17:09Z",
    "closed_at": null,
    "body": "Currently getAttribute returns an empty string if an attribute doesn't exist. This is correct by DOM 3 specification. However all current browsers returns null in this case. \r\n\r\nThe behaviour of getAttribute is changed in DOM 4 so that getAttribute will return null. (http://www.w3.org/TR/2015/WD-dom-20150428/#dom-element-getattribute)\r\n\r\nI know that xmldom is based on DOM 3, but IMHO this should be changed as it would increase the real world compatibility and the DOM 4 specification is more sane."
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/129",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/129/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/129/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/129/events",
    "html_url": "https://github.com/jindw/xmldom/issues/129",
    "id": 93900390,
    "number": 129,
    "title": "When will you support DOM level 4?",
    "user": {
      "login": "zhanzhenzhen",
      "id": 731796,
      "avatar_url": "https://avatars.githubusercontent.com/u/731796?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zhanzhenzhen",
      "html_url": "https://github.com/zhanzhenzhen",
      "followers_url": "https://api.github.com/users/zhanzhenzhen/followers",
      "following_url": "https://api.github.com/users/zhanzhenzhen/following{/other_user}",
      "gists_url": "https://api.github.com/users/zhanzhenzhen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zhanzhenzhen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zhanzhenzhen/subscriptions",
      "organizations_url": "https://api.github.com/users/zhanzhenzhen/orgs",
      "repos_url": "https://api.github.com/users/zhanzhenzhen/repos",
      "events_url": "https://api.github.com/users/zhanzhenzhen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zhanzhenzhen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-07-08T22:01:58Z",
    "updated_at": "2015-07-08T22:01:58Z",
    "closed_at": null,
    "body": "When will you support DOM level 4?"
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/128",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/128/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/128/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/128/events",
    "html_url": "https://github.com/jindw/xmldom/issues/128",
    "id": 93297634,
    "number": 128,
    "title": "How can I get the element without the prefix ?",
    "user": {
      "login": "tngan",
      "id": 10245912,
      "avatar_url": "https://avatars.githubusercontent.com/u/10245912?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tngan",
      "html_url": "https://github.com/tngan",
      "followers_url": "https://api.github.com/users/tngan/followers",
      "following_url": "https://api.github.com/users/tngan/following{/other_user}",
      "gists_url": "https://api.github.com/users/tngan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tngan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tngan/subscriptions",
      "organizations_url": "https://api.github.com/users/tngan/orgs",
      "repos_url": "https://api.github.com/users/tngan/repos",
      "events_url": "https://api.github.com/users/tngan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tngan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-07-06T14:50:25Z",
    "updated_at": "2015-07-06T14:50:25Z",
    "closed_at": null,
    "body": "Since the prefix can be customized, and it doesn't have a fixed value, so can I get the element from the document without prefix but only with localName ?"
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/127",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/127/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/127/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/127/events",
    "html_url": "https://github.com/jindw/xmldom/issues/127",
    "id": 86538202,
    "number": 127,
    "title": "Handle tags with trailing space",
    "user": {
      "login": "bluepuma77",
      "id": 5221187,
      "avatar_url": "https://avatars.githubusercontent.com/u/5221187?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bluepuma77",
      "html_url": "https://github.com/bluepuma77",
      "followers_url": "https://api.github.com/users/bluepuma77/followers",
      "following_url": "https://api.github.com/users/bluepuma77/following{/other_user}",
      "gists_url": "https://api.github.com/users/bluepuma77/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bluepuma77/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bluepuma77/subscriptions",
      "organizations_url": "https://api.github.com/users/bluepuma77/orgs",
      "repos_url": "https://api.github.com/users/bluepuma77/repos",
      "events_url": "https://api.github.com/users/bluepuma77/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bluepuma77/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-06-09T10:10:01Z",
    "updated_at": "2015-06-09T10:10:01Z",
    "closed_at": null,
    "body": "xmldom seems to have an issue with spaces in closing tags.\r\n\r\nThis XML string\r\n```\r\n<VideoClicks>\r\n  <ClickThrough>\r\n    <![CDATA[https://server]]>\r\n  </ClickThrough>\r\n  <ClickTracking >\r\n    <![CDATA[https://server]]>\r\n  </ClickTracking >\r\n</VideoClicks>\r\n```\r\ngives me the following error\r\n\r\n```end tag name: ClickTracking  is not match the current start tagName:VideoClicks```\r\n\r\nI first thought it's an issue with the CDATA, but the error appears even when I remove it.\r\n\r\nWhen I remove the trailing space in `</ClickTracking >` the parsing works.\r\n\r\nAccording to this site http://usingxml.com/Basics/XmlSpace the space is according to specification.\r\n\r\nSo xmldom should be able to process closing tags with trailing space correctly."
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/126",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/126/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/126/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/126/events",
    "html_url": "https://github.com/jindw/xmldom/pull/126",
    "id": 78803830,
    "number": 126,
    "title": "Update license attribute",
    "user": {
      "login": "pdehaan",
      "id": 557895,
      "avatar_url": "https://avatars.githubusercontent.com/u/557895?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pdehaan",
      "html_url": "https://github.com/pdehaan",
      "followers_url": "https://api.github.com/users/pdehaan/followers",
      "following_url": "https://api.github.com/users/pdehaan/following{/other_user}",
      "gists_url": "https://api.github.com/users/pdehaan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pdehaan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pdehaan/subscriptions",
      "organizations_url": "https://api.github.com/users/pdehaan/orgs",
      "repos_url": "https://api.github.com/users/pdehaan/repos",
      "events_url": "https://api.github.com/users/pdehaan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pdehaan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-05-21T03:19:58Z",
    "updated_at": "2015-05-21T03:19:58Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/jindw/xmldom/pulls/126",
      "html_url": "https://github.com/jindw/xmldom/pull/126",
      "diff_url": "https://github.com/jindw/xmldom/pull/126.diff",
      "patch_url": "https://github.com/jindw/xmldom/pull/126.patch"
    },
    "body": "specifying the type and URL is deprecated:\r\n\r\nhttps://docs.npmjs.com/files/package.json#license\r\nhttp://npm1k.org/"
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/125",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/125/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/125/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/125/events",
    "html_url": "https://github.com/jindw/xmldom/issues/125",
    "id": 77632568,
    "number": 125,
    "title": "special handling of <script>",
    "user": {
      "login": "gagern",
      "id": 190759,
      "avatar_url": "https://avatars.githubusercontent.com/u/190759?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gagern",
      "html_url": "https://github.com/gagern",
      "followers_url": "https://api.github.com/users/gagern/followers",
      "following_url": "https://api.github.com/users/gagern/following{/other_user}",
      "gists_url": "https://api.github.com/users/gagern/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gagern/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gagern/subscriptions",
      "organizations_url": "https://api.github.com/users/gagern/orgs",
      "repos_url": "https://api.github.com/users/gagern/repos",
      "events_url": "https://api.github.com/users/gagern/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gagern/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-05-18T12:11:20Z",
    "updated_at": "2015-05-18T12:11:20Z",
    "closed_at": null,
    "body": "When parsing `application/xml`, then there should be *no* special case for the HTML `<script>` tag. In particular,\r\n\r\n```js\r\nnew xmldom.DOMParser().parseFromString(\r\n  '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><script> a < b </script></head></html>',\r\n  'application/xml');\r\n```\r\n\r\nshould report an error and\r\n\r\n```js\r\nvar doc = new xmldom.DOMParser().parseFromString(\r\n  '<html xmlns=\"http://www.w3.org/1999/xhtml\">'+\r\n  '<head><script><![CDATA[ text=\"]]]><![CDATA[]>\"; ]]></script></head>'+\r\n  '<body><p><![CDATA[ text ]]></p></body></html>', 'application/xml');\r\n```\r\n\r\nshould result in `doc.textContent === ' text=\"]]>\";   text '`. The serializer should not make the assumption that a `<script>` tag will contain at most single child which is a text node.\r\n\r\nI know you probably had all the best intentions in mind with this, but it breaks interoperability with other tools, since the result will not be well-formed XML. There are situations where you want to embed XHTML into other stuff, to be processed by some later stage."
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/124",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/124/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/124/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/124/events",
    "html_url": "https://github.com/jindw/xmldom/issues/124",
    "id": 77622039,
    "number": 124,
    "title": "documentElement",
    "user": {
      "login": "gagern",
      "id": 190759,
      "avatar_url": "https://avatars.githubusercontent.com/u/190759?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gagern",
      "html_url": "https://github.com/gagern",
      "followers_url": "https://api.github.com/users/gagern/followers",
      "following_url": "https://api.github.com/users/gagern/following{/other_user}",
      "gists_url": "https://api.github.com/users/gagern/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gagern/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gagern/subscriptions",
      "organizations_url": "https://api.github.com/users/gagern/orgs",
      "repos_url": "https://api.github.com/users/gagern/repos",
      "events_url": "https://api.github.com/users/gagern/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gagern/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-05-18T11:38:57Z",
    "updated_at": "2015-05-18T11:38:57Z",
    "closed_at": null,
    "body": "The handling of documentElement is incorrect. If one does\r\n\r\n```js\r\ndocument.replaceChild(newRoot, document.documentElement);\r\n```\r\n\r\nthen afterwards `document.documentElement` will be `null`. That's because `replaceChild` is implemented in terms of first insert then remove, and remove sets the `documentElement` to `null` if that is what's being removed.\r\n\r\nI can think of at least two possible solutions. On the one hand, you could make `documentElement` a getter function. That would make it read-only, and could compute its value on the fly. On the other hand, you could adjust the `removeChild` code to set `documentElement` to the remaining element if there is one."
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/123",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/123/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/123/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/123/events",
    "html_url": "https://github.com/jindw/xmldom/pull/123",
    "id": 73430314,
    "number": 123,
    "title": "Added find() and findOne() methods to Element",
    "user": {
      "login": "seanmcilvenna",
      "id": 5384694,
      "avatar_url": "https://avatars.githubusercontent.com/u/5384694?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seanmcilvenna",
      "html_url": "https://github.com/seanmcilvenna",
      "followers_url": "https://api.github.com/users/seanmcilvenna/followers",
      "following_url": "https://api.github.com/users/seanmcilvenna/following{/other_user}",
      "gists_url": "https://api.github.com/users/seanmcilvenna/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seanmcilvenna/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seanmcilvenna/subscriptions",
      "organizations_url": "https://api.github.com/users/seanmcilvenna/orgs",
      "repos_url": "https://api.github.com/users/seanmcilvenna/repos",
      "events_url": "https://api.github.com/users/seanmcilvenna/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seanmcilvenna/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-05-05T20:59:45Z",
    "updated_at": "2015-05-05T20:59:45Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/jindw/xmldom/pulls/123",
      "html_url": "https://github.com/jindw/xmldom/pull/123",
      "diff_url": "https://github.com/jindw/xmldom/pull/123.diff",
      "patch_url": "https://github.com/jindw/xmldom/pull/123.patch"
    },
    "body": "Hi. I have been working on a fork of xmldom, to add in some functionality for more-easily finding elements. I think this would be a good addition to the main xmldom implementation...\r\n\r\nThe idea is pretty simple, you can chain .find() or .findOne() requests on Element instances, like so:\r\n\r\nvar results = doc.documentElement\r\n  .find('myElement')\r\n  .find('myChildElement')\r\n  .findOne('mySingleGrandchildElement');\r\n\r\nPlease consider merging this into your master branch.\r\n\r\nP.S. I started building a unit test for this, but couldn't figure out what framework you were using for unit tests (more specifically, how I would go about executing the unit tests). I am familiar with mocha, but not with the framework you are using."
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/122",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/122/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/122/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/122/events",
    "html_url": "https://github.com/jindw/xmldom/pull/122",
    "id": 71329351,
    "number": 122,
    "title": "Calling toString on node.value incase typeof(node.value) !== string.",
    "user": {
      "login": "JamieDixon",
      "id": 1519443,
      "avatar_url": "https://avatars.githubusercontent.com/u/1519443?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JamieDixon",
      "html_url": "https://github.com/JamieDixon",
      "followers_url": "https://api.github.com/users/JamieDixon/followers",
      "following_url": "https://api.github.com/users/JamieDixon/following{/other_user}",
      "gists_url": "https://api.github.com/users/JamieDixon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JamieDixon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JamieDixon/subscriptions",
      "organizations_url": "https://api.github.com/users/JamieDixon/orgs",
      "repos_url": "https://api.github.com/users/JamieDixon/repos",
      "events_url": "https://api.github.com/users/JamieDixon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JamieDixon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-04-27T16:00:52Z",
    "updated_at": "2015-04-27T16:00:52Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/jindw/xmldom/pulls/122",
      "html_url": "https://github.com/jindw/xmldom/pull/122",
      "diff_url": "https://github.com/jindw/xmldom/pull/122.diff",
      "patch_url": "https://github.com/jindw/xmldom/pull/122.patch"
    },
    "body": "fixes #121 - When `typeof(node.value)` is not a string, calling `replace` on it throws an error. In my specific case, `node.value` was being reported as a `number`. Calling `.toString()` on the object ensures that we're dealing with a string when calling `replace`."
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/121",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/121/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/121/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/121/events",
    "html_url": "https://github.com/jindw/xmldom/issues/121",
    "id": 71329148,
    "number": 121,
    "title": "Calling `.replace()` on non string node values throws an error.",
    "user": {
      "login": "JamieDixon",
      "id": 1519443,
      "avatar_url": "https://avatars.githubusercontent.com/u/1519443?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JamieDixon",
      "html_url": "https://github.com/JamieDixon",
      "followers_url": "https://api.github.com/users/JamieDixon/followers",
      "following_url": "https://api.github.com/users/JamieDixon/following{/other_user}",
      "gists_url": "https://api.github.com/users/JamieDixon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JamieDixon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JamieDixon/subscriptions",
      "organizations_url": "https://api.github.com/users/JamieDixon/orgs",
      "repos_url": "https://api.github.com/users/JamieDixon/repos",
      "events_url": "https://api.github.com/users/JamieDixon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JamieDixon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2015-04-27T16:00:06Z",
    "updated_at": "2015-05-04T22:08:35Z",
    "closed_at": null,
    "body": "When `typeof(node.value)` is not a string, calling `replace` on it throws an error. In my specific case, `node.value` was being reported as a `number`.\r\n\r\nKnown location of issue: dom.js 952:49"
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/120",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/120/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/120/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/120/events",
    "html_url": "https://github.com/jindw/xmldom/pull/120",
    "id": 68652073,
    "number": 120,
    "title": "make sure serializeToString, ATTRIBUTE_NODE node.value is a string",
    "user": {
      "login": "bhamblok",
      "id": 407923,
      "avatar_url": "https://avatars.githubusercontent.com/u/407923?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bhamblok",
      "html_url": "https://github.com/bhamblok",
      "followers_url": "https://api.github.com/users/bhamblok/followers",
      "following_url": "https://api.github.com/users/bhamblok/following{/other_user}",
      "gists_url": "https://api.github.com/users/bhamblok/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bhamblok/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bhamblok/subscriptions",
      "organizations_url": "https://api.github.com/users/bhamblok/orgs",
      "repos_url": "https://api.github.com/users/bhamblok/repos",
      "events_url": "https://api.github.com/users/bhamblok/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bhamblok/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-04-15T11:19:55Z",
    "updated_at": "2015-04-15T11:19:55Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/jindw/xmldom/pulls/120",
      "html_url": "https://github.com/jindw/xmldom/pull/120",
      "diff_url": "https://github.com/jindw/xmldom/pull/120.diff",
      "patch_url": "https://github.com/jindw/xmldom/pull/120.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/118",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/118/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/118/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/118/events",
    "html_url": "https://github.com/jindw/xmldom/issues/118",
    "id": 67059657,
    "number": 118,
    "title": "Does this support for Worker?",
    "user": {
      "login": "lygstate",
      "id": 121040,
      "avatar_url": "https://avatars.githubusercontent.com/u/121040?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lygstate",
      "html_url": "https://github.com/lygstate",
      "followers_url": "https://api.github.com/users/lygstate/followers",
      "following_url": "https://api.github.com/users/lygstate/following{/other_user}",
      "gists_url": "https://api.github.com/users/lygstate/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lygstate/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lygstate/subscriptions",
      "organizations_url": "https://api.github.com/users/lygstate/orgs",
      "repos_url": "https://api.github.com/users/lygstate/repos",
      "events_url": "https://api.github.com/users/lygstate/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lygstate/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-04-08T06:25:38Z",
    "updated_at": "2015-04-08T06:25:38Z",
    "closed_at": null,
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/117",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/117/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/117/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/117/events",
    "html_url": "https://github.com/jindw/xmldom/issues/117",
    "id": 63433138,
    "number": 117,
    "title": "xmldom throws attr errors on XML that all browsers parse without error",
    "user": {
      "login": "Pomax",
      "id": 177243,
      "avatar_url": "https://avatars.githubusercontent.com/u/177243?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Pomax",
      "html_url": "https://github.com/Pomax",
      "followers_url": "https://api.github.com/users/Pomax/followers",
      "following_url": "https://api.github.com/users/Pomax/following{/other_user}",
      "gists_url": "https://api.github.com/users/Pomax/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Pomax/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Pomax/subscriptions",
      "organizations_url": "https://api.github.com/users/Pomax/orgs",
      "repos_url": "https://api.github.com/users/Pomax/repos",
      "events_url": "https://api.github.com/users/Pomax/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Pomax/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2015-03-21T17:32:19Z",
    "updated_at": "2015-08-18T05:26:44Z",
    "closed_at": null,
    "body": "The following statement is accepted and parser by the window.DOMParser of all major browsers, but throws an error in xmldom:\r\n```\r\n<top><first id=\"123.456\"></first><top>\r\n```\r\nxmldom claims:\r\n```\r\nunclosed xml attribute\r\n@#[line:1,col:1]\r\n```\r\n(I didn't check the source, so if it's tripping up on the id starting with a number, that's legal in HTML because `id` doesn't have inherent meaning. That's the only thing I can think of.)"
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/116",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/116/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/116/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/116/events",
    "html_url": "https://github.com/jindw/xmldom/issues/116",
    "id": 60874071,
    "number": 116,
    "title": "Parse and modify XML tag element using xmldom",
    "user": {
      "login": "youemailmee",
      "id": 11436527,
      "avatar_url": "https://avatars.githubusercontent.com/u/11436527?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/youemailmee",
      "html_url": "https://github.com/youemailmee",
      "followers_url": "https://api.github.com/users/youemailmee/followers",
      "following_url": "https://api.github.com/users/youemailmee/following{/other_user}",
      "gists_url": "https://api.github.com/users/youemailmee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/youemailmee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/youemailmee/subscriptions",
      "organizations_url": "https://api.github.com/users/youemailmee/orgs",
      "repos_url": "https://api.github.com/users/youemailmee/repos",
      "events_url": "https://api.github.com/users/youemailmee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/youemailmee/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2015-03-12T18:45:03Z",
    "updated_at": "2015-07-30T15:17:11Z",
    "closed_at": null,
    "body": "I am trying to read modify write and XML tag element value.\r\n\r\nfs.readFile('./test.xml','utf8', function (err, data) {\r\n    if (err) {\r\n          return console.log(err);\r\n    } else {\r\n           var doc = new dom().parseFromString(data);\r\n\r\n           doc.getElementsByTagName(\"status\")[0].childNodes[0].nodeValue = '100';\r\n\r\n           //Below statement return correct value 100\r\n           console.log(doc.getElementsByTagName(\"status\")[0].childNodes[0].nodeValue);\r\n\r\n           var serializer = new xmldom.XMLSerializer();\r\n           var writetofile = serializer.serializeToString(doc);\r\n \r\n            //Returns WRONG old value for the modified childNode.   \r\n           console.log(writetofile);\r\n      }\r\n});\r\n\r\nAm I missing something ?\r\n\r\nThanks in advance.\r\n"
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/115",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/115/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/115/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/115/events",
    "html_url": "https://github.com/jindw/xmldom/issues/115",
    "id": 60597946,
    "number": 115,
    "title": "Add parameter to xml file with xmldom",
    "user": {
      "login": "Melvin-Wu",
      "id": 7699997,
      "avatar_url": "https://avatars.githubusercontent.com/u/7699997?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Melvin-Wu",
      "html_url": "https://github.com/Melvin-Wu",
      "followers_url": "https://api.github.com/users/Melvin-Wu/followers",
      "following_url": "https://api.github.com/users/Melvin-Wu/following{/other_user}",
      "gists_url": "https://api.github.com/users/Melvin-Wu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Melvin-Wu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Melvin-Wu/subscriptions",
      "organizations_url": "https://api.github.com/users/Melvin-Wu/orgs",
      "repos_url": "https://api.github.com/users/Melvin-Wu/repos",
      "events_url": "https://api.github.com/users/Melvin-Wu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Melvin-Wu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-11T01:44:11Z",
    "updated_at": "2015-03-11T01:46:00Z",
    "closed_at": null,
    "body": "I'm a new user with nodejs, now I need to add some pamameters to existing xml file,just as follows:\r\n<domain xxx=xxx>\r\n  <a>aaa</a>\r\n</domain>\r\nafter add parameter it becomes:\r\n<domain xxx=xxx>\r\n  <a>aaa</a>\r\n <b>bbb</b>\r\n</domain>.\r\nHow can make it by nodejs modules xmldom?\r\nThanks.\r\n\r\nthe code is:![qq 20150311094605](https://cloud.githubusercontent.com/assets/7699997/6588891/4db95ae0-c7d3-11e4-94d5-e8b7883dfae8.png)\r\n"
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/114",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/114/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/114/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/114/events",
    "html_url": "https://github.com/jindw/xmldom/issues/114",
    "id": 60167665,
    "number": 114,
    "title": "\"Cannot read property 'length' of null\" thrown from hasAttributes() call.",
    "user": {
      "login": "cbegin",
      "id": 275089,
      "avatar_url": "https://avatars.githubusercontent.com/u/275089?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbegin",
      "html_url": "https://github.com/cbegin",
      "followers_url": "https://api.github.com/users/cbegin/followers",
      "following_url": "https://api.github.com/users/cbegin/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbegin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbegin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbegin/subscriptions",
      "organizations_url": "https://api.github.com/users/cbegin/orgs",
      "repos_url": "https://api.github.com/users/cbegin/repos",
      "events_url": "https://api.github.com/users/cbegin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbegin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-06T22:23:59Z",
    "updated_at": "2015-03-06T23:00:38Z",
    "closed_at": null,
    "body": "## To reproduce:\r\n```\r\n    var xmlString = '<car id=\"1\"><colors><color>red</color><color>blue</color></colors><engine><size>big</size></engine></car>';\r\n    var xmlDOM = new DOMParser().parseFromString(xmlString);\r\n    xmlDOM.hasAttributes();\r\n```\r\n\r\n## The likely problem:\r\n```\r\n    hasAttributes:function(){\r\n    \treturn this.attributes.length>0;\r\n    },\r\n```\r\n## Possible solution:\r\n\r\nAdd a null check in front of the length check.\r\n\r\nhttps://github.com/jindw/xmldom/blob/f053be7ceb9b1ddcff93c4b36c92dadb4d589986/dom.js#L362\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/113",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/113/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/113/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/113/events",
    "html_url": "https://github.com/jindw/xmldom/pull/113",
    "id": 59605677,
    "number": 113,
    "title": "compareDocumentPosition and export domClasses required for xpath2",
    "user": {
      "login": "neu-rah",
      "id": 4712642,
      "avatar_url": "https://avatars.githubusercontent.com/u/4712642?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/neu-rah",
      "html_url": "https://github.com/neu-rah",
      "followers_url": "https://api.github.com/users/neu-rah/followers",
      "following_url": "https://api.github.com/users/neu-rah/following{/other_user}",
      "gists_url": "https://api.github.com/users/neu-rah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/neu-rah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/neu-rah/subscriptions",
      "organizations_url": "https://api.github.com/users/neu-rah/orgs",
      "repos_url": "https://api.github.com/users/neu-rah/repos",
      "events_url": "https://api.github.com/users/neu-rah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/neu-rah/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-03T07:34:36Z",
    "updated_at": "2015-03-03T07:34:36Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/jindw/xmldom/pulls/113",
      "html_url": "https://github.com/jindw/xmldom/pull/113",
      "diff_url": "https://github.com/jindw/xmldom/pull/113.diff",
      "patch_url": "https://github.com/jindw/xmldom/pull/113.patch"
    },
    "body": "requirements for use xpath2 (xpath.js https://github.com/ilinsky/xpath.js) with example code"
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/112",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/112/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/112/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/112/events",
    "html_url": "https://github.com/jindw/xmldom/issues/112",
    "id": 55355376,
    "number": 112,
    "title": "Support for '*' namespace in getElementsByTagNameNS",
    "user": {
      "login": "jonmabe",
      "id": 132810,
      "avatar_url": "https://avatars.githubusercontent.com/u/132810?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonmabe",
      "html_url": "https://github.com/jonmabe",
      "followers_url": "https://api.github.com/users/jonmabe/followers",
      "following_url": "https://api.github.com/users/jonmabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonmabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonmabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonmabe/subscriptions",
      "organizations_url": "https://api.github.com/users/jonmabe/orgs",
      "repos_url": "https://api.github.com/users/jonmabe/repos",
      "events_url": "https://api.github.com/users/jonmabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonmabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-01-24T02:17:06Z",
    "updated_at": "2015-01-24T02:17:06Z",
    "closed_at": null,
    "body": "According to the w3 docs, you should be able to pass '*' as your namespace in getElementsByTagNameNS to match all namespaces. This doesn't appear to work in xmldom.\r\n\r\nhttp://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#i-Document\r\n\r\n> namespaceURI of type DOMString\r\n> The namespace URI of the elements to match on. The special value \"*\" matches all namespaces."
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/111",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/111/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/111/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/111/events",
    "html_url": "https://github.com/jindw/xmldom/issues/111",
    "id": 55091859,
    "number": 111,
    "title": "childNodes property should never be undefined.",
    "user": {
      "login": "sterpe",
      "id": 678398,
      "avatar_url": "https://avatars.githubusercontent.com/u/678398?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sterpe",
      "html_url": "https://github.com/sterpe",
      "followers_url": "https://api.github.com/users/sterpe/followers",
      "following_url": "https://api.github.com/users/sterpe/following{/other_user}",
      "gists_url": "https://api.github.com/users/sterpe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sterpe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sterpe/subscriptions",
      "organizations_url": "https://api.github.com/users/sterpe/orgs",
      "repos_url": "https://api.github.com/users/sterpe/repos",
      "events_url": "https://api.github.com/users/sterpe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sterpe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-01-21T23:13:51Z",
    "updated_at": "2015-01-21T23:31:11Z",
    "closed_at": null,
    "body": "According to both Level 2/3 Core all Nodes have a childNodes property which is a type of NodeList, which may be the empty array but never undefined.  This includes the type TEXT_NODE.  `xmldom`.DOMParser does not properly handle this for childless nodes leaving the childNodes property undefined in such cases."
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/110",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/110/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/110/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/110/events",
    "html_url": "https://github.com/jindw/xmldom/pull/110",
    "id": 54771706,
    "number": 110,
    "title": "redefine Attr.nodeValue",
    "user": {
      "login": "ringel7",
      "id": 9195998,
      "avatar_url": "https://avatars.githubusercontent.com/u/9195998?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ringel7",
      "html_url": "https://github.com/ringel7",
      "followers_url": "https://api.github.com/users/ringel7/followers",
      "following_url": "https://api.github.com/users/ringel7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ringel7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ringel7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ringel7/subscriptions",
      "organizations_url": "https://api.github.com/users/ringel7/orgs",
      "repos_url": "https://api.github.com/users/ringel7/repos",
      "events_url": "https://api.github.com/users/ringel7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ringel7/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-01-19T14:41:59Z",
    "updated_at": "2015-01-19T14:41:59Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/jindw/xmldom/pulls/110",
      "html_url": "https://github.com/jindw/xmldom/pull/110",
      "diff_url": "https://github.com/jindw/xmldom/pull/110.diff",
      "patch_url": "https://github.com/jindw/xmldom/pull/110.patch"
    },
    "body": "fixed issue #107\r\n"
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/108",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/108/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/108/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/108/events",
    "html_url": "https://github.com/jindw/xmldom/issues/108",
    "id": 54080722,
    "number": 108,
    "title": "node.namespaceURI should never be undefined",
    "user": {
      "login": "micschro",
      "id": 9990291,
      "avatar_url": "https://avatars.githubusercontent.com/u/9990291?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/micschro",
      "html_url": "https://github.com/micschro",
      "followers_url": "https://api.github.com/users/micschro/followers",
      "following_url": "https://api.github.com/users/micschro/following{/other_user}",
      "gists_url": "https://api.github.com/users/micschro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/micschro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/micschro/subscriptions",
      "organizations_url": "https://api.github.com/users/micschro/orgs",
      "repos_url": "https://api.github.com/users/micschro/repos",
      "events_url": "https://api.github.com/users/micschro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/micschro/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-01-12T17:18:59Z",
    "updated_at": "2015-01-12T17:18:59Z",
    "closed_at": null,
    "body": "It seems the `namespaceURI` property of attribute nodes that use the default namespace is always `undefined`. \r\nThe spec states that it should be `null` instead:\r\n\r\n> The namespace URI of this node, or null if it is unspecified.\r\n\r\nhttp://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-NodeNSname\r\n\r\nThis is a problem for us because it breaks our equals check for xml names (which compares the tagname and namespace). "
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/107",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/107/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/107/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/107/events",
    "html_url": "https://github.com/jindw/xmldom/issues/107",
    "id": 53759432,
    "number": 107,
    "title": "nodeValue of Attr",
    "user": {
      "login": "ringel7",
      "id": 9195998,
      "avatar_url": "https://avatars.githubusercontent.com/u/9195998?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ringel7",
      "html_url": "https://github.com/ringel7",
      "followers_url": "https://api.github.com/users/ringel7/followers",
      "following_url": "https://api.github.com/users/ringel7/following{/other_user}",
      "gists_url": "https://api.github.com/users/ringel7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ringel7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ringel7/subscriptions",
      "organizations_url": "https://api.github.com/users/ringel7/orgs",
      "repos_url": "https://api.github.com/users/ringel7/repos",
      "events_url": "https://api.github.com/users/ringel7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ringel7/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-01-08T15:02:35Z",
    "updated_at": "2015-01-08T15:12:49Z",
    "closed_at": null,
    "body": "Hi, I wrote the followings:\r\n\r\n```\r\nvar DOMParser = require(\"xmldom\").DOMParser;\r\nvar XMLSerializer = require(\"xmldom\").XMLSerializer;\r\n\r\nvar xml = new DOMParser().parseFromString(\"<x></x>\", 'text/xml');\r\nvar attr = xml.createAttribute(\"a\");\r\nattr.nodeValue = \"b\";\r\nxml.documentElement.setAttributeNode(attr);\r\n\r\nvar str = new XMLSerializer().serializeToString(xml);\r\nconsole.log(str);\r\n```\r\nThe result: \r\n\r\n```\r\n> node domsample.js\r\n\r\nC:\\Users\\xxx\\AppData\\Roaming\\npm\\node_modules\\xmldom\\dom.js:952\r\n                return buf.push(' ',node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),\r\n                                                              ^\r\nTypeError: Cannot call method 'replace' of undefined\r\n    at serializeToString (C:\\Users\\xxx\\AppData\\Roaming\\npm\\node_modules\\xmldom\\dom.js:952:49)\r\n    at serializeToString (C:\\Users\\xxx\\AppData\\Roaming\\npm\\node_modules\\xmldom\\dom.js:923:4)\r\n    at serializeToString (C:\\Users\\xxx\\AppData\\Roaming\\npm\\node_modules\\xmldom\\dom.js:947:4)\r\n    at XMLSerializer.serializeToString (C:\\Users\\xxx\\AppData\\Roaming\\npm\\node_modules\\xmldom\\dom.js:907:2)\r\n    at Object.<anonymous> (C:\\home\\xmldom\\domsample.js:9:31)\r\n    at Module._compile (module.js:456:26)\r\n    at Object.Module._extensions..js (module.js:474:10)\r\n    at Module.load (module.js:356:32)\r\n    at Function.Module._load (module.js:312:12)\r\n    at Function.Module.runMain (module.js:497:10)\r\n```\r\n\r\nI think that nodeValue of Attr should be the alias of value property. \r\n\r\n```\r\n\t\tObject.defineProperty(Attr.prototype,'nodeValue',{\r\n\t\t\tget:function(){\r\n\t\t\t\treturn this.value;\r\n\t\t\t},\r\n\t\t\tset:function(data){\r\n\t\t\t\tthis.value = data;\r\n\t\t\t}\r\n\t\t})\r\n```\r\n\r\ndom standard of whatwg (https://dom.spec.whatwg.org/#interface-attr) defines:\r\n```\r\ninterface Attr {\r\n  attribute DOMString value;\r\n  attribute DOMString nodeValue; // legacy alias of .value\r\n```\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/106",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/106/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/106/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/106/events",
    "html_url": "https://github.com/jindw/xmldom/issues/106",
    "id": 53546725,
    "number": 106,
    "title": "Indentation to new line for newly created elements in missing",
    "user": {
      "login": "swapnarachapalli",
      "id": 7146923,
      "avatar_url": "https://avatars.githubusercontent.com/u/7146923?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swapnarachapalli",
      "html_url": "https://github.com/swapnarachapalli",
      "followers_url": "https://api.github.com/users/swapnarachapalli/followers",
      "following_url": "https://api.github.com/users/swapnarachapalli/following{/other_user}",
      "gists_url": "https://api.github.com/users/swapnarachapalli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swapnarachapalli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swapnarachapalli/subscriptions",
      "organizations_url": "https://api.github.com/users/swapnarachapalli/orgs",
      "repos_url": "https://api.github.com/users/swapnarachapalli/repos",
      "events_url": "https://api.github.com/users/swapnarachapalli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swapnarachapalli/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-01-06T18:34:05Z",
    "updated_at": "2015-01-06T18:34:05Z",
    "closed_at": null,
    "body": "Hi\r\n\r\n I created new nodes and elements. Upon writing this new doc, i see that these new nodes are appended to the parent node line with no spaces, tabs or newline.\r\n\r\nHow can i add indentation to these new elements ?\r\n\r\nThanks\r\nSwapna"
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/105",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/105/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/105/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/105/events",
    "html_url": "https://github.com/jindw/xmldom/issues/105",
    "id": 53509046,
    "number": 105,
    "title": "require('xmldom') throws cannot find module 'xmldom'",
    "user": {
      "login": "swapnarachapalli",
      "id": 7146923,
      "avatar_url": "https://avatars.githubusercontent.com/u/7146923?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swapnarachapalli",
      "html_url": "https://github.com/swapnarachapalli",
      "followers_url": "https://api.github.com/users/swapnarachapalli/followers",
      "following_url": "https://api.github.com/users/swapnarachapalli/following{/other_user}",
      "gists_url": "https://api.github.com/users/swapnarachapalli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swapnarachapalli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swapnarachapalli/subscriptions",
      "organizations_url": "https://api.github.com/users/swapnarachapalli/orgs",
      "repos_url": "https://api.github.com/users/swapnarachapalli/repos",
      "events_url": "https://api.github.com/users/swapnarachapalli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swapnarachapalli/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-01-06T12:12:00Z",
    "updated_at": "2015-01-06T12:12:00Z",
    "closed_at": null,
    "body": "Hi,\r\n\r\n I am newbee to nodejs.  I have installed nodejs on my windows , also have phonegap installed. I am able to work with phonegap. For my project need i installed xmldom like \"npm install xmldom\" both in some folder and as well as in the nodejs installation dir.  So even when i run node list command i can see xmdom package. But my script fails at require('xmldom'). can you please help, it is very urgent ??\r\n\r\nRegards,\r\nSwapna"
  },
  {
    "url": "https://api.github.com/repos/jindw/xmldom/issues/104",
    "labels_url": "https://api.github.com/repos/jindw/xmldom/issues/104/labels{/name}",
    "comments_url": "https://api.github.com/repos/jindw/xmldom/issues/104/comments",
    "events_url": "https://api.github.com/repos/jindw/xmldom/issues/104/events",
    "html_url": "https://github.com/jindw/xmldom/pull/104",
    "id": 53232103,
    "number": 104,
    "title": "Add placeholder for dispatchEvent (to at least avoid errors upon trigger...",
    "user": {
      "login": "brettz9",
      "id": 20234,
      "avatar_url": "https://avatars.githubusercontent.com/u/20234?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brettz9",
      "html_url": "https://github.com/brettz9",
      "followers_url": "https://api.github.com/users/brettz9/followers",
      "following_url": "https://api.github.com/users/brettz9/following{/other_user}",
      "gists_url": "https://api.github.com/users/brettz9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brettz9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brettz9/subscriptions",
      "organizations_url": "https://api.github.com/users/brettz9/orgs",
      "repos_url": "https://api.github.com/users/brettz9/repos",
      "events_url": "https://api.github.com/users/brettz9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brettz9/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-01-01T23:52:05Z",
    "updated_at": "2015-01-01T23:52:05Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/jindw/xmldom/pulls/104",
      "html_url": "https://github.com/jindw/xmldom/pull/104",
      "diff_url": "https://github.com/jindw/xmldom/pull/104.diff",
      "patch_url": "https://github.com/jindw/xmldom/pull/104.patch"
    },
    "body": "... attmempts by jsdom appending)"
  }
]
